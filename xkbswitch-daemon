#!/usr/bin/env python

import dbus
import dbus.mainloop.glib
import dbus.service
import gobject
import xkbswitch

class XkbSwitch (dbus.service.Object):
    def __init__ (self, bus, display_name = None):
        dbus.service.Object.__init__ (self,
            dbus.service.BusName ('de.berlios.xkbswitch.XkbSwitch', bus),
            '/de/berlios/xkbswitch/XkbSwitch')
        xkbswitch.initialize (display_name)
        self._layouts = xkbswitch.get_layouts ()
        self._layouts_usage = {}.fromkeys (self._layouts, 1)
        self._layouts += [None] * ((xkbswitch.get_max_num_groups () or 8) -
            len (self._layouts))
        print 'XkbSwitch: layouts =', self._layouts

    def __del__ (self):
        xkbswitch.finalize ()

    @dbus.service.method (dbus_interface = 'de.berlios.xkbswitch.XkbSwitch',
                          in_signature   = 's',
                          out_signature  = 'b')
    def activate_layout (self, layout_name):
        layout_str = str (layout_name)
        print 'XkbSwitch: switching to', layout_str
        try:
            xkbswitch.set_group (self._layouts.index (layout_str))
            self._layouts_usage [layout_str] += 1
        except ValueError:
            group = None
            if self._layouts.count (None) != 0:
                group = self._layouts.index (None)
            else:
                def filtered_usage ():
                    return filter (lambda elem: elem [0] in self._layouts,
                        self._layouts_usage.items ())
                key   = min (((v, k) for (k, v) in filtered_usage ())) [1]
                group = self._layouts.index (key)
                print 'XkbSwitch: replacing layout', key, 'with', layout_str
            new_layouts         = self._layouts
            new_layouts [group] = layout_str
            try:
                xkbswitch.set_layouts (new_layouts)
                xkbswitch.set_group (group)
                self._layouts = new_layouts
                self._layouts_usage [layout_str] = \
                    self._layouts_usage.setdefault (layout_str, 0) + 1
            except EnvironmentError, error_obj:
                print 'EnvironmentError:', error_obj
                return False
        print 'XkbSwitch: layouts =', self._layouts
        print 'XkbSwitch: layouts usage =', self._layouts_usage
        return True

if __name__ == '__main__':
    glib_loop   = dbus.mainloop.glib.DBusGMainLoop (set_as_default = True)
    session_bus = dbus.SessionBus (mainloop = glib_loop)
    switch      = XkbSwitch (bus = session_bus)
    print 'XkbSwitch: entering main loop'
    gobject.MainLoop ().run ()
